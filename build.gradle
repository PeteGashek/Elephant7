apply plugin: "java"

// specify path to Tomcat root in gradle.properties as tomcatBase property
def webAppDir = "$tomcatBase/webapps"

// default values for config.json
def defaultWorkingDir = "$tomcatBase/work/" + project.name

def generatedDir = buildDir.path + "/generated"
task generateConfig(type: Copy) {
    from project.projectDir
    include "base_config.json"

    into generatedDir
    rename("base_config.json", "config.json")

    expand(workingDir: defaultWorkingDir.replace("\\", "\\\\"))
}

def buildAndDeployTaskGroup = "build and deploy"

def explodedWarDir = buildDir.path + "/exploded-war/" + project.name
task buildExplodedWar(dependsOn: [compileJava, generateConfig]) {
    group = buildAndDeployTaskGroup

    doLast {
        delete explodedWarDir
        copy {
            from compileJava
            from sourceSets.main.resources
            into explodedWarDir + "/WEB-INF/classes"
        }
        copy {
            from configurations.runtime
            into explodedWarDir + "/WEB-INF/lib"
        }
        copy {
            from "src/main/webapp"
            from generatedDir
            into explodedWarDir
        }
    }
}

task buildWar(dependsOn: buildExplodedWar, type: Jar) {
    group = buildAndDeployTaskGroup

    extension = "war"
    from explodedWarDir
}

def deployedExplodedWarPath = webAppDir + "/" + project.name
def deployedWarPath = deployedExplodedWarPath + ".war"
task deployExplodedWar(dependsOn: buildExplodedWar, type: Copy) {
    group = buildAndDeployTaskGroup

    outputs.upToDateWhen { false }

    doFirst {
        delete deployedExplodedWarPath
        delete deployedWarPath
    }

    from buildDir.path + "/exploded-war"
    into webAppDir
}

task deployWar(dependsOn: buildWar, type: Copy) {
    group = buildAndDeployTaskGroup

    outputs.upToDateWhen { false }

    doFirst {
        delete deployedExplodedWarPath
    }

    from buildWar
    into webAppDir
}

repositories {
    mavenCentral()
}

def gsonVersion = "2.6.2"
def h2Version = "1.4.191"
def servletApiVersion = "3.1.0"
def springVersion = "4.2.5.RELEASE"

dependencies {
    compile "com.google.code.gson:gson:$gsonVersion"

    compile "com.h2database:h2:$h2Version"

    compileOnly "javax.servlet:javax.servlet-api:$servletApiVersion"

    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
}
